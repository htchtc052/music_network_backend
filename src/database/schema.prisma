generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Genders {
  NOT_SPECIFIED
  FEMALE
  MALE
}

model User {
  id               Int       @id @default(autoincrement())
  isAdmin          Boolean   @default(false)
  username         String
  email            String    @unique
  password         String
  firstName        String?
  lastName         String?
  gender           Genders?  @default(NOT_SPECIFIED)
  emailConfirmedAt DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  deletedAt        DateTime?
  Token            Token[]
  Track            Track[]

  @@map(name: "users")
}

model Token {
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "tokens")
}

model Track {
  id                Int        @id @default(autoincrement())
  title             String
  private           Boolean    @default(false)
  keywords          String[]
  description       String?
  hiddenDescription String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?
  userId            Int
  user              User       @relation(fields: [userId], references: [id])
  file              TrackFile?

  @@map(name: "tracks")
}

model TrackFile {
  id       Int    @id @default(autoincrement())
  filePath String
  fileSize Int    @default(0)
  mimetype String
  track    Track  @relation(fields: [trackId], references: [id])
  trackId  Int    @unique

  @@map(name: "tracks_files")
}
